---
- name: Add helm repo of Hazelcast
  kubernetes.core.helm_repository:
    name: hazelcast
    repo_url: "https://hazelcast-charts.s3.amazonaws.com/"
    force_update: true
  tags:
    - hz
    - hz-init
######################
## License
######################
- name: Create license secret from file in home directory
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: hazelcast-license
        namespace: default
      type: Opaque
      data:
        license-key: "{{ lookup('file', '~/hazelcast/hazelcast.license') | b64encode }}"
  tags:
    - always
######################
## SSL
## https://docs.ansible.com/ansible/latest/collections/community/crypto/docsite/guide_selfsigned.html
## https://docs.hazelcast.com/operator/latest/tls
######################
- name: Create private key
  community.crypto.openssl_privatekey:
    path: "{{ self_signed_cert_key_file }}"
    size: 2048
    format: pkcs8
  tags:
    - ssl
- name: Create certificate signing request (CSR) for self-signed certificate
  community.crypto.openssl_csr_pipe:
    privatekey_path: "{{ self_signed_cert_key_file }}"
    common_name: hazelcast.com
    organization_name: Hazelcast
    subject_alt_name:
      - DNS:hazelcast.com
      - DNS:hazelcast
      - DNS:hazelcast.default.svc.cluster.local
      - DNS:hz-primary
      - DNS:hz-primary.default.svc.cluster.local
      - DNS:hz-secondary
      - DNS:hz-secondary.default.svc.cluster.local
  register: csr
  tags:
    - ssl
- name: Create simple self-signed certificate
  community.crypto.x509_certificate:
    path: "{{ self_signed_cert_cert_file }}"
    privatekey_path: "{{ self_signed_cert_key_file }}"
    csr_content: "{{ csr.csr }}"
    provider: selfsigned
  tags:
    - ssl
- name: Kubernetes tls secret from the certificate
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: hazelcast-ssl
        namespace: default
      type: kubernetes.io/tls
      data:
        tls.crt: "{{ lookup('file', self_signed_cert_cert_file) | b64encode }}"
        tls.key: "{{ lookup('file', self_signed_cert_key_file) | b64encode }}"
  tags:
      - ssl
- name: Using java_keystore module create a keystore
  community.general.java_keystore:
    name: hazelcast-ssl
    certificate: "{{ lookup('file', self_signed_cert_cert_file) }}"
    private_key: "{{ lookup('file', self_signed_cert_key_file) }}"
    password: hazelcast
    dest: "{{ self_signed_cert_keystore_file }}"
  tags:
    - ssl
- name: Create a ConfigMap from the keystore file
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: hazelcast-keystore
        namespace: default
      binaryData:
        hazelcast.jks: "{{ lookup('file', self_signed_cert_keystore_file) | b64encode }}"
  tags:
      - ssl
######################
## Jar
######################
- name: Execute maven pom file to build the jar
  shell: mvn clean install -f pom.xml
  args:
    chdir: ../
  tags:
    - hz
    - hz-platform
    - jar
    - pipeline
- name: Build custom Hazelcast image. Build for amd64 platform
  shell: docker buildx build --platform linux/amd64 -t hazelcast-enterprise-tx-stream:5.3.2 -f ./roles/hz-helm/files/Dockerfile ../
  args:
    chdir: "{{ playbook_dir }}"
    creates: hazelcast-enterprise-tx-stream
  tags:
    - hz
    - hz-platform
    - jar
    - build-image
- name: Push custom Hazelcast image to GCP Artifact Registry
  community.docker.docker_image:
    name: "hazelcast-enterprise-tx-stream:5.3.2"
    source: local
    # https://cloud.google.com/artifact-registry/docs/docker/store-docker-container-images#add-image
    repository: "{{ region }}-docker.pkg.dev/{{ project_id }}/{{ repository_id }}/hazelcast-enterprise-tx-stream:5.3.2"
    push: yes
  tags:
    - hz
    - hz-platform
    - jar
    - build-image
######################
## Clusters
######################
- name: Install Hazelcast secondary cluster via helm
  kubernetes.core.helm:
    name: hz-secondary
    chart_ref: hazelcast/hazelcast-enterprise
    release_namespace: default
    release_name: hz-secondary
    values:
      #pull image from GCP Artifact Registry
      image:
        repository: "{{ region }}-docker.pkg.dev/{{ project_id }}/{{ repository_id }}/hazelcast-enterprise-tx-stream"
        tag: 5.3.2
        pullPolicy: Always
      licenseKeySecretName: hazelcast-license
      hazelcast:
        yaml:
          hazelcast:
            user-code-deployment:
              enabled: true
  tags:
    - hz-secondary
    - hz
    - hz-platform
# - name: Register all the IPs of the hz-secondary cluster
#   #  shell: kubectl get service -l=app.kubernetes.io/instance=hz-secondary,hazelcast.com/service-per-pod -o=jsonpath="{range .items[*]}{.status.loadBalancer.ingress[0].ip}{','}{end}" | sed 's/.$//'kubectl get service -l=app.kubernetes.io/instance=hz-secondary,hazelcast.com/service-per-pod -o=jsonpath="{range .items[*]}{.status.loadBalancer.ingress[0].ip}{','}{end}" | sed 's/.$//'
#   shell: kubectl get service hz-secondary -o=jsonpath="{.status.loadBalancer.ingress[0].ip}"
#   register: hz_secondary_ips
#   tags:
#     - wan
#     - hz
#     - hz-secondary
#     - hz-platform
#     - hz-primary
# - name: Print the list of IPs
#   debug:
#     msg: "Hz Secondary cluster IPs : {{ hz_secondary_ips.stdout }}"
#   tags:
#     - wan
#     - hz
#     - hz-secondary
#     - hz-platform
#     - hz-primary
# - name: Custom configuration for primary Hazelcast. Used for data-connection
#   kubernetes.core.k8s:
#     state: present
#     definition: "{{ lookup('template', './templates/primary-custom-config-cm.j2') }}"
#   tags:
#     - hz-primary
#     - hz
#     - hz-platform
# - name: Install Hazelcast primary cluster
#   kubernetes.core.k8s:
#     state: present
#     definition:
#       apiVersion: hazelcast.com/v1alpha1
#       kind: Hazelcast
#       metadata:
#         namespace: default
#         name: hz-primary
#       spec:
#         customConfigCmName: primary-custom-config-cm
#         clusterSize: "{{ primary_cluster_size }}"
#         repository: 'docker.io/hazelcast/hazelcast-enterprise'
#         version: '5.3.2'
#         licenseKeySecret: hazelcast-license
#         clusterName: hz-primary
#         jet:
#           resourceUploadEnabled: true
#         properties:
#           "hazelcast.slow.operation.detector.enabled": "true"
#         userCodeDeployment:
#           clientEnabled: true
#           bucketConfig:
#             bucketURI: gs://raj-code
#             secretName: gcp-credentials
#         exposeExternally:
#           type: Smart
#           discoveryServiceType: LoadBalancer
#           memberAccess: LoadBalancer
# #        tls:
# #          secretName: hazelcast-ssl
#   tags:
#     - hz-primary
#     - hz
#     - hz-platform
# - name: Wait for Hazelcast primary cluster to be ready
#   kubernetes.core.k8s_info:
#     kind: Pod
#     wait: yes
#     namespace: default
#     name: "hz-primary-{{ item }}"
#     wait_sleep: 10
#     wait_timeout: 360
#   loop: "{{ range(0, primary_cluster_size)|list }}"
#   tags:
#     - hz-primary
#     - hz
#     - hz-platform

# ######################
# ## MC
# ######################
# - name: Start management center
#   kubernetes.core.k8s:
#     state: present
#     definition:
#       apiVersion: hazelcast.com/v1alpha1
#       kind: ManagementCenter
#       metadata:
#         namespace: default
#         name: hazelcast-mc
#       spec:
#         repository: 'docker.io/hazelcast/management-center'
#         version: '5.3.0'
#         licenseKeySecret: hazelcast-license
#         externalConnectivity:
#           type: LoadBalancer
#         hazelcastClusters:
#           - address: hz-primary
#             name: hz-primary
# #            tls:
# #              secretName: hazelcast-ssl
#           - address: hz-secondary
#             name: hz-secondary
# #            tls:
# #              secretName: hazelcast-ssl
#         persistence:
#           enabled: true
#           size: 1Gi
#   tags:
#     - mc
#     - hz
# - name: Wait for management centre to be ready
#   shell: "kubectl wait --for=condition=ready pod/hazelcast-mc-0 -n default --timeout=300s"
#   tags:
#     - mc
#     - hz
# #- name: Exec into management centre to run mc-conf. This does not work. Issue reported.
# #  kubernetes.core.k8s_exec:
# #    namespace: default
# #    pod: hazelcast-mc-0
# #    command: /bin/sh -c "/opt/hazelcast/management-center/bin/hz-mc conf user create -n mcadmin -r admin -p Hazelcast@42"
# #  tags:
# #    - mc
# #    - hz
# ######################
# ## Maps
# ## Does not deploy. Bug reported to Hasan.
# ## Using custom config instead
# ######################
# #- name: Create Hazelcast Map named justamap
# #  kubernetes.core.k8s:
# #    state: present
# #    definition:
# #      apiVersion: hazelcast.com/v1alpha1
# #      kind: Map
# #      metadata:
# #        namespace: default
# #        name: justamap
# #      spec:
# #        hazelcastResourceName: hz-primary
# #  tags:
# #    - maps
# #    - hz
# ##- name: Create a properties for mapstore merchant
# ##  kubernetes.core.k8s:
# ##    state: present
# ##    definition:
# ##      apiVersion: v1
# ##      kind: Secret
# ##      metadata:
# ##        name: mapstore-properties-merchant
# ##        namespace: default
# ##      type: Opaque
# ##      stringData:
# ##        data-connection-ref: postgres
# ##        mapping-type: JDBC
# ##        id-column: id
# ##  tags:
# ##    - maps
# ##    - hz
# #- name: Create a properties for mapstore
# #  kubernetes.core.k8s:
# #    state: present
# #    definition:
# #      apiVersion: v1
# #      kind: Secret
# #      metadata:
# #        name: mapstore-properties
# #        namespace: default
# #      type: Opaque
# #      stringData:
# #        jdbcUrl: "jdbc:postgresql://postgres-postgresql.default.svc.cluster.local:5432/postgres"
# #        user: "postgres"
# #        password: "hk#uT7@9"
# #        driverClassName: "org.postgresql.Driver"
# #  tags:
# #    - maps
# #    - hz
# #- name: Create Hazelcast Map named merchant
# #  kubernetes.core.k8s:
# #    state: present
# #    definition:
# #      apiVersion: hazelcast.com/v1alpha1
# #      kind: Map
# #      metadata:
# #        namespace: default
# #        name: merchant
# #      spec:
# #        hazelcastResourceName: hz-primary
# #        backupCount: 0
# #        mapStore:
# #          className: com.hz.txstream.domainstore.MerchantStore
# #          propertiesSecretName: mapstore-properties
# #          initialMode: EAGER
# #  tags:
# #    - maps
# #    - hz
# ##- name: Create a properties for mapstore transaction
# ##  kubernetes.core.k8s:
# ##    state: present
# ##    definition:
# ##      apiVersion: v1
# ##      kind: Secret
# ##      metadata:
# ##        name: mapstore-properties-transaction
# ##        namespace: default
# ##      type: Opaque
# ##      stringData:
# ##        data-connection-ref: postgres
# ##        mapping-type: JDBC
# ##        id-column: id
# ##  tags:
# ##    - maps
# ##    - hz
# #- name: Create Hazelcast Map named transaction
# #  kubernetes.core.k8s:
# #    state: present
# #    definition:
# #      apiVersion: hazelcast.com/v1alpha1
# #      kind: Map
# #      metadata:
# #        namespace: default
# #        name: transaction
# #      spec:
# #        hazelcastResourceName: hz-primary
# #        backupCount: 0
# #        mapStore:
# #          className: com.hz.txstream.domainstore.TransactionStore
# #          propertiesSecretName: mapstore-properties
# #          initialMode: EAGER
# #  tags:
# #    - maps
# #    - hz
# ##- name: Create a properties for mapstore account
# ##  kubernetes.core.k8s:
# ##    state: present
# ##    definition:
# ##      apiVersion: v1
# ##      kind: Secret
# ##      metadata:
# ##        name: mapstore-properties-account
# ##        namespace: default
# ##      type: Opaque
# ##      stringData:
# ##        data-connection-ref: postgres
# ##        mapping-type: JDBC
# ##        id-column: acct_number
# ##  tags:
# ##    - maps
# ##    - hz
# #- name: Create Hazelcast Map named account
# #  kubernetes.core.k8s:
# #    state: present
# #    definition:
# #      apiVersion: hazelcast.com/v1alpha1
# #      kind: Map
# #      metadata:
# #        namespace: default
# #        name: account
# #      spec:
# #        hazelcastResourceName: hz-primary
# #        backupCount: 0
# #        mapStore:
# #          className: com.hz.txstream.domainstore.AccountStore
# #          propertiesSecretName: mapstore-properties
# #          initialMode: EAGER
# #  tags:
# #    - maps
# #    - hz

# ######################
# ## WAN Replication
# ######################
# #- name: Setup WAN replication between primary and secondary clusters
# #  kubernetes.core.k8s:
# #    state: present
# #    definition:
# #      apiVersion: hazelcast.com/v1alpha1
# #      kind: WanReplication
# #      metadata:
# #        namespace: default
# #        name: hazelcast-wan-replication
# #      spec:
# #        resources:
# #          - name: hz-primary
# #            kind: Hazelcast
# #        targetClusterName: hz-secondary
# #        endpoints: "{{ hz_secondary_ips.stdout }}:5710"
# #  tags:
# #    - wan
# #    - hz
# ######################
# ## pipeline via CLC
# ######################
# - name: Find out the External IP of hz-primary-0
#   shell: "kubectl get service hz-primary-0 -n default -o jsonpath='{.status.loadBalancer.ingress[0].ip}'"
#   register: hz_primary_ip
#   until: hz_primary_ip.stdout != ""
#   retries: 10
#   delay: 10
#   tags:
#     - hz
#     - pipeline
# - name: Add the external IP to CLC config
# #  shell: "clc config add hz-primary cluster.address={{hz_primary_ip.stdout}}:5701 cluster.name=hz-primary ssl.enabled=true ssl.skip-verify=true"
#   shell: "clc config add hz-primary cluster.address={{hz_primary_ip.stdout}}:5701 cluster.name=hz-primary"
#   tags:
#     - hz
#     - pipeline
# - name: Execute Hazelcast Command Line Client to deploy the code
#   shell: clc -c hz-primary job submit ../target/tx-stream-1.0-SNAPSHOT.jar --class com.hz.txstream.control.FraudDetectionRun
#   tags:
#     - hz
#     - pipeline



