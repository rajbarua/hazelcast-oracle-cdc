---
######################
## pipeline via CLC
######################
- name: Execute maven pom file to build the jar
  shell: mvn clean install -f pom.xml
  args:
    chdir: ../
  tags:
    - job
- name: Find out the External IP of hz-primary-0
  shell: "kubectl get service hz-primary-0 -n default -o jsonpath='{.status.loadBalancer.ingress[0].ip}'"
  register: hz_primary_ip
  until: hz_primary_ip.stdout != ""
  retries: 10
  delay: 10
  tags:
    - job
- name: Add the external IP to CLC config
  shell: "clc config add hz-primary cluster.address={{hz_primary_ip.stdout}}:5701 cluster.name=hz-primary ssl.enabled=true ssl.skip-verify=true"
  # shell: "clc config add hz-primary cluster.address={{hz_primary_ip.stdout}}:5701 cluster.name=hz-primary"
  tags:
    - job
- name: Add data connection to kafka 
  shell: "clc -c hz-primary script ./roles/pmt-job/files/kafka-ds.sql"
  tags:
    - job
    - dc
- name: Execute Hazelcast Command Line Client to deploy the code
  shell: clc -c hz-primary job submit ../pmt-job/target/pmt-job-1.0.0-SNAPSHOT.jar --class com.hz.demo.pmt.job.PaymentAggregator
  tags:
    - job

# #####################
# # pipeline via CRD
# #####################
# - name: Push jar into GCP Bucket
#   shell: gsutil cp ../pmt-job/target/pmt-job-1.0.0-SNAPSHOT.jar gs://raj-code
#   tags:
#     - job
# #- name: Deploy Job
# #  kubernetes.core.k8s:
# #    state: present
# #    definition:
# #      apiVersion: hazelcast.com/v1alpha1
# #      kind: JetJob
# #      metadata:
# #        name: payment-pipeline
# #        namespace: default
# #      spec:
# #        name: payment-pipeline
# #        hazelcastResourceName: hz-primary
# #        state: Running
# #        jarName: tx-stream-1.0-SNAPSHOT.jar
# #        mainClass: com.hz.txstream.control.FraudDetectionRun
# #        bucketConfig:
# #          bucketURI: gs://raj-code
# #          secretName: gcp-credentials
# #  tags:
# #    - hz
# #    - pipeline

# # tasks file for k8s/roles/populate-data
# - name: Build an image for linux/amd64 platform
#   # https://stackoverflow.com/questions/73285601/docker-exec-usr-bin-sh-exec-format-error
#   # https://docs.ansible.com/ansible/latest/collections/community/docker/docker_image_module.html#notes
#   shell: docker buildx build --platform linux/amd64 -t java-app ../
#   args:
#     chdir: "{{ playbook_dir }}"
#     creates: java-app
#   tags:
#     - populate-data
#     - build-image
# - name: Push image to GKE Artifact Registry
#   community.docker.docker_image:
#     name: "java-app"
#     source: local
#     # https://cloud.google.com/artifact-registry/docs/docker/store-docker-container-images#add-image
#     repository: "{{ region }}-docker.pkg.dev/{{ project_id }}/{{ repository_id }}/java-app:latest"
#     push: yes
#   tags:
#     - populate-data
#     - build-image

# - name: Deploy the java-app image in a k8s container along with a startup container executing java class com.hz.txstream.util.GenerateAll
#   kubernetes.core.k8s:
#     state: present
#     definition:
#       apiVersion: v1
#       kind: Job
#       metadata:
#           name: load-data
#           namespace: default
#       spec:
#         template:
#           spec:
#             containers:
#             - name: load-data
#               image: "{{ region }}-docker.pkg.dev/{{ project_id }}/{{ repository_id }}/java-app"
#               imagePullPolicy: Always
#               command: ["java", "-cp", "target/tx-stream-1.0-SNAPSHOT.jar:target/lib/*", "com.hz.txstream.util.GenerateAll"]
#               env:
#                   - name: JdbcHost
#                     value: postgres-postgresql.default.svc.cluster.local
#                   - name: JdbcPassword
#                     value: hk#uT7@9
#             restartPolicy: Never
#   tags:
#       - populate-data